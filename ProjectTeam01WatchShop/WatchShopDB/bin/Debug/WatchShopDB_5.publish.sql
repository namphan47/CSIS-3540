/*
Deployment script for WatchShop

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WatchShop"
:setvar DefaultFilePrefix "WatchShop"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Orders].[OrdersID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Orders])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The table [dbo].[Products] is being dropped and re-created since all non-computed columns within the table have been redefined.
*/

IF EXISTS (select top 1 1 from [dbo].[Products])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Transactions].[TransactionID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Transactions])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[FK_Orders_Employee]...';


GO
ALTER TABLE [dbo].[Orders] DROP CONSTRAINT [FK_Orders_Employee];


GO
PRINT N'Dropping [dbo].[FK_Orders_Products]...';


GO
ALTER TABLE [dbo].[Orders] DROP CONSTRAINT [FK_Orders_Products];


GO
PRINT N'Dropping [dbo].[FK_Orders_Transactions]...';


GO
ALTER TABLE [dbo].[Orders] DROP CONSTRAINT [FK_Orders_Transactions];


GO
PRINT N'Dropping [dbo].[FK_Transactions_Employee]...';


GO
ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT [FK_Transactions_Employee];


GO
PRINT N'Dropping [dbo].[Products]...';


GO
DROP TABLE [dbo].[Products];


GO
PRINT N'Starting rebuilding table [dbo].[Orders]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Orders] (
    [Id]            INT IDENTITY (1, 1) NOT NULL,
    [TransactionId] INT NOT NULL,
    [EmpId]         INT NOT NULL,
    [ProductId]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Orders])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Orders] ([TransactionID], [EmpID], [ProductID])
        SELECT [TransactionID],
               [EmpID],
               [ProductID]
        FROM   [dbo].[Orders];
    END

DROP TABLE [dbo].[Orders];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Orders]', N'Orders';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Products]...';


GO
CREATE TABLE [dbo].[Products] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Brand]       VARCHAR (50) NOT NULL,
    [Description] VARCHAR (50) NULL,
    [Quantity]    INT          NULL,
    [Price]       INT          NULL,
    [Image]       VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Starting rebuilding table [dbo].[Transactions]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Transactions] (
    [Id]            INT          IDENTITY (1, 1) NOT NULL,
    [EmpCashierID]  INT          NULL,
    [ProductTotal]  DECIMAL (18) NOT NULL,
    [TaxAmount]     DECIMAL (18) NOT NULL,
    [OverallTotal]  DECIMAL (18) NOT NULL,
    [CustomerEmail] VARCHAR (50) NULL,
    [TotalQuantity] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Transactions])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Transactions] ([EmpCashierID], [ProductTotal], [TaxAmount], [OverallTotal], [CustomerEmail], [TotalQuantity])
        SELECT [EmpCashierID],
               [ProductTotal],
               [TaxAmount],
               [OverallTotal],
               [CustomerEmail],
               [TotalQuantity]
        FROM   [dbo].[Transactions];
    END

DROP TABLE [dbo].[Transactions];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Transactions]', N'Transactions';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Employees]...';


GO
CREATE TABLE [dbo].[Employees] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Name]     VARCHAR (50)  NULL,
    [Address]  VARCHAR (100) NULL,
    [Password] VARCHAR (50)  NOT NULL,
    [RoleId]   INT           NULL,
    [PhoneNo]  VARCHAR (50)  NOT NULL,
    [Email]    VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Type] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Orders_Employee]...';


GO
ALTER TABLE [dbo].[Orders] WITH NOCHECK
    ADD CONSTRAINT [FK_Orders_Employee] FOREIGN KEY ([EmpId]) REFERENCES [dbo].[Employees] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Orders_Products]...';


GO
ALTER TABLE [dbo].[Orders] WITH NOCHECK
    ADD CONSTRAINT [FK_Orders_Products] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Products] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Orders_Transactions]...';


GO
ALTER TABLE [dbo].[Orders] WITH NOCHECK
    ADD CONSTRAINT [FK_Orders_Transactions] FOREIGN KEY ([TransactionId]) REFERENCES [dbo].[Transactions] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Transactions_Employee]...';


GO
ALTER TABLE [dbo].[Transactions] WITH NOCHECK
    ADD CONSTRAINT [FK_Transactions_Employee] FOREIGN KEY ([EmpCashierID]) REFERENCES [dbo].[Employees] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employee_Role]...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Role] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Orders] WITH CHECK CHECK CONSTRAINT [FK_Orders_Employee];

ALTER TABLE [dbo].[Orders] WITH CHECK CHECK CONSTRAINT [FK_Orders_Products];

ALTER TABLE [dbo].[Orders] WITH CHECK CHECK CONSTRAINT [FK_Orders_Transactions];

ALTER TABLE [dbo].[Transactions] WITH CHECK CHECK CONSTRAINT [FK_Transactions_Employee];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employee_Role];


GO
PRINT N'Update complete.';


GO
